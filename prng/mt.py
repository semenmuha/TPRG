from progress.bar import IncrementalBar


def mt(n_, parameters_):
    bar = IncrementalBar('Выполнение:', max=n_)
    w = 32
    r = 31
    q = 397
    a = 2567483615
    u = 11
    s = 7
    t = 15
    l = 18
    b = 2636928640
    c = 4022730752
    if parameters_[0]:
        p = int(parameters_.pop(0))
    else:
        p = 624
    x = [5, 28, 14, 27, 18, 17, 23, 1, 24, 17, 5, 11, 1, 1, 19, 13, 21, 7, 2, 11, 8, 23, 21, 15, 24, 4, 7, 11, 29, 7, 24, 15, 13, 9, 26, 3, 12, 9, 8, 17, 2, 2, 28, 6, 30, 14, 29, 21, 13, 1, 27, 9, 18, 26, 8, 14, 22, 15, 9, 7, 21, 10, 12, 6, 23, 17, 13, 18, 3, 29, 29, 17, 5, 14, 18, 18, 17, 12, 5, 3, 18, 26, 29, 29, 7, 17, 1, 23, 16, 9, 26, 28, 4, 21, 6, 30, 29, 15, 14, 26, 24, 30, 23, 26, 22, 22, 26, 9, 2, 16, 11, 16, 30, 3, 7, 30, 8, 11, 9, 10, 25, 12, 1, 22, 11, 5, 22, 12, 24, 18, 17, 6, 10, 15, 21, 24, 26, 12, 13, 4, 19, 26, 26, 22, 15, 10, 1, 18, 25, 28, 1, 24, 18, 27, 3, 5, 15, 27, 21, 17, 5, 29, 16, 28, 30, 10, 26, 6, 22, 6, 4, 4, 8, 5, 2, 4, 17, 22, 5, 12, 15, 11, 8, 7, 5, 5, 8, 18, 23, 28, 19, 2, 18, 6, 2, 3, 9, 17, 9, 4, 29, 6, 29, 17, 25, 11, 18, 28, 12, 6, 13, 8, 14, 14, 7, 13, 9, 22, 28, 20, 30, 3, 8, 1, 28, 10, 28, 7, 12, 26, 14, 27, 18, 30, 7, 18, 2, 30, 13, 12, 11, 17, 9, 24, 23, 10, 18, 4, 15, 29, 3, 19, 15, 24, 13, 15, 7, 12, 3, 7, 21, 17, 24, 3, 14, 22, 9, 29, 2, 7, 27, 29, 18, 26, 4, 12, 6, 25, 21, 8, 20, 11, 10, 23, 8, 4, 26, 28, 12, 19, 11, 13, 1, 3, 22, 12, 16, 11, 6, 26, 28, 17, 25, 29, 5, 12, 27, 25, 11, 7, 13, 5, 27, 12, 19, 25, 11, 5, 3, 5, 9, 26, 28, 25, 18, 18, 22, 16, 17, 29, 2, 20, 2, 7, 2, 26, 29, 6, 6, 23, 8, 20, 6, 26, 24, 28, 22, 15, 7, 28, 26, 7, 24, 21, 28, 16, 27, 8, 2, 3, 19, 23, 6, 20, 19, 27, 16, 16, 1, 20, 10, 8, 8, 8, 28, 21, 8, 11, 4, 13, 29, 29, 8, 24, 22, 3, 2, 26, 13, 19, 8, 17, 25, 6, 2, 7, 4, 20, 24, 26, 2, 23, 9, 15, 22, 19, 20, 24, 29, 2, 29, 24, 3, 28, 30, 2, 22, 28, 21, 28, 9, 12, 30, 18, 13, 2, 9, 17, 20, 10, 24, 30, 20, 23, 6, 30, 21, 8, 26, 13, 30, 9, 30, 1, 14, 19, 16, 6, 18, 9, 15, 1, 27, 4, 12, 4, 26, 6, 24, 19, 24, 4, 15, 6, 13, 10, 24, 2, 29, 5, 12, 24, 14, 24, 11, 1, 23, 24, 12, 2, 2, 18, 27, 30, 11, 26, 28, 20, 20, 8, 11, 23, 4, 26, 19, 17, 21, 11, 29, 11, 30, 2, 9, 12, 17, 18, 18, 13, 14, 12, 19, 20, 7, 15, 2, 17, 15, 26, 12, 24, 22, 3, 4, 22, 16, 9, 12, 16, 13, 30, 14, 24, 1, 10, 21, 16, 6, 1, 30, 27, 19, 25, 27, 7, 12, 17, 24, 29, 12, 20, 4, 21, 12, 16, 13, 21, 23, 29, 2, 29, 21, 12, 13, 23, 12, 22, 16, 12, 19, 22, 6, 20, 11, 28, 16, 7, 26, 14, 17, 17, 4, 22, 29, 6, 27, 14, 16, 28, 18, 11, 25, 2, 13, 27, 14, 23, 27, 14, 30, 21, 6, 6, 4, 12, 15, 17, 27, 3, 6, 5, 2, 19, 9, 12, 24, 20, 11, 21, 13, 8, 26, 16, 18, 1]
    res = []
    value1 = ''
    value2 = ''
    for i in range(w - r):
        value1 += '1'
        value2 += '0'
    for i in range(r):
        value1 += '0'
        value2 += '1'

    value1Int = int(value1, 2)
    value2Int = int(value2, 2)
    n = int(n_)
    for i in range(n + 1500):
        t12 = int(x[i]) & value1Int
        t13 = int((x[i + 1])) & value2Int
        Y = t12 | t13

        if (Y % 2 != 0):
            valuex = (int(x[i + q]) % 2 ** w) ^ (Y >> 1) ^ a
        else:
            valuex = (int(x[i + q]) % 2 ** w) ^ (Y >> 1) ^ 0
        Y = valuex
        Y = (Y ^ (Y >> u))
        Y = Y ^ ((Y << s) & b)
        Y = Y ^ ((Y << t) & c)
        Z = (Y ^ (Y >> l))
        x.append(valuex)
        res.append(Z % p)
        bar.next()
    bar.finish()
    return res[1500:(n+1500)]
